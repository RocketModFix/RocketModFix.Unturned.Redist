name: "Update.Unturned.Redist"

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:
    inputs:
      variant:
        description: 'Which variant to update'
        required: true
        default: 'client'
        type: choice
        options:
          - client
          - server
          - server-preview
          - client-preview
          - server-preview-old
          - client-preview-old

permissions:
  contents: write
  packages: write

concurrency:
  group: unturned-redist-update-${{ github.ref }}
  cancel-in-progress: false

jobs:
  update_redist:
    name: "Update ${{ matrix.variant }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: 
          - client
          - server
          - server-preview
          - client-preview
          - server-preview-old
          - client-preview-old
      # Run all variants in parallel without failing entire workflow
      fail-fast: false
    
    env:
      APP_ID: ${{ (matrix.variant == 'client' || matrix.variant == 'client-preview' || matrix.variant == 'client-preview-old') && '304930' || '1110390' }}
      REDIST_DIR: ${{ matrix.variant == 'client-preview' && 'redist/redist-client' || matrix.variant == 'server-preview' && 'redist/redist-server' || matrix.variant == 'client-preview-old' && 'redist/redist-client-preview-old' || matrix.variant == 'server-preview-old' && 'redist/redist-server-preview-old' || matrix.variant == 'client' && 'redist/redist-client' || matrix.variant == 'server' && 'redist/redist-server' || 'redist/redist-unknown' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: master
          # Fetch entire history for proper version comparison
          fetch-depth: 0

      - name: Download update tool
        uses: robinraju/release-downloader@v1
        with:
          repository: RocketModFix/UnturnedRedistUpdateTool
          latest: true
          fileName: UnturnedRedistUpdateTool.zip
          out-file-path: redist_tool
          extract: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        env:
          DOTNET_NOLOGO: true
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
          DOTNET_CLI_TELEMETRY_OPTOUT: true
        with:
          dotnet-version: 9.x

      - name: Setup SteamCMD
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Update game files
        run: |
          if [[ "${{ matrix.variant }}" == "client" || "${{ matrix.variant }}" == "server" ]]; then
            steamcmd +force_install_dir $GITHUB_WORKSPACE +login ${{ secrets.STEAM_USERNAME }} ${{ secrets.STEAM_PASSWORD }} +app_update $APP_ID -validate +quit
          else
            steamcmd +force_install_dir $GITHUB_WORKSPACE +login ${{ secrets.STEAM_USERNAME }} ${{ secrets.STEAM_PASSWORD }} +app_update $APP_ID -beta preview -validate +quit
          fi

      - name: Run redist updater
        run: |
          flags=""
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            flags+=" --force"
          fi
          if [[ "${{ matrix.variant }}" == "client-preview" || "${{ matrix.variant }}" == "server-preview" ]]; then
            flags+=" --preview"
          fi
          
          dotnet redist_tool/UnturnedRedistUpdateTool.dll "$GITHUB_WORKSPACE" "$GITHUB_WORKSPACE/$REDIST_DIR" "$APP_ID" $flags

      - name: Commit changes
        if: success()
        run: |
          git config --global user.email "sunnamed434@users.noreply.github.com"
          git config --global user.name "sunnamed434"
          
          # Check for actual changes before committing
          if git diff --quiet; then
            echo "No changes detected for ${{ matrix.variant }}"
          else
            git add -A
            git reset README.md  # Reset README.md, cause steamcmd override it.
            git commit -m "Update redist: ${{ matrix.variant }}"
            git push
          fi

  workflow-keepalive:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1